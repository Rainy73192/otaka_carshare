version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: otaka_carshare
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - otaka_network

  # MinIO 对象存储
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - otaka_network

  # FastAPI 后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      no_cache: true
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/otaka_carshare
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      JWT_SECRET_KEY: your-super-secret-jwt-key-change-in-production
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ADMIN_EMAIL: admin@otaka.com
      ADMIN_PASSWORD: admin123
      # Email settings (需要配置真实的邮件服务)
      MAIL_USERNAME: wanglongyu1208@gmail.com
      MAIL_PASSWORD: xwpadpqmuzzupbyk
      MAIL_FROM: wanglongyu1208@gmail.com
      MAIL_FROM_NAME: otaka_carshare
      MAIL_PORT: 587
      MAIL_SERVER: smtp.gmail.com
      MAIL_STARTTLS: true
      MAIL_SSL_TLS: false
      MAIL_USE_CREDENTIALS: true
      MAIL_VALIDATE_CERTS: true
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - minio
    networks:
      - otaka_network
    command: >
      sh -c "
        python init_admin.py &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

  # Next.js 前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      no_cache: true
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8001
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - otaka_network

volumes:
  postgres_data:
  minio_data:

networks:
  otaka_network:
    driver: bridge
